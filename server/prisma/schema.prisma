// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Article {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  title     String    @db.VarChar(255)
  content   String
  approved  Boolean   @default(false)
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  comments  Comment[]
}

model Comment {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  commenterName  String   @db.VarChar(255)
  commentContent String
  approved       Boolean  @default(false)
  article        Article  @relation(fields: [articleId], references: [id])
  articleId      Int
  replies        Reply[]
}

model Reply {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  responderName String   @db.VarChar(255)
  replyContent  String
  approved      Boolean  @default(false)
  comment       Comment  @relation(fields: [commentId], references: [id])
  commentId     Int
}

model User {
  id                      Int      @id @default(autoincrement())
  email                   String   @unique
  firstName               String?
  lastName                String?
  password                String?
  hash                    String?
  salt                    String?
  isAdmin                 Boolean  @default(false)
  passwordResetExpiration String?
  passwordResetToken      String?
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  articles Article[]
  Session  Session[]
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  userEmail String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}
